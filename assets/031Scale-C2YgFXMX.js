import{c as a,G as r,o as n}from"./index-B35MWeLe.js";const o={class:"markdown-body"},l={__name:"031Scale",setup(i,{expose:t}){return t({frontmatter:{}}),(p,e)=>(n(),a("div",o,e[0]||(e[0]=[r("<h1>Scale</h1><p>When setting encoding, you may need to precisely specify the mapping relationship between data values and visual channel properties. For example:</p><ul><li>Mapping a data value of 12000 to a length of 700 pixels on the graphic.</li><li>Mapping the category “February” to a position of 350 on the canvas.</li><li>…</li></ul><p>Scales allow for precise definition of these mapping relationships.</p><h2>class LinearScale</h2><p>Implements a linear mapping from domain to range. The domain represents the interval of the input data values, while the range represents the interval of the output screen space values. Input data values are mapped to the corresponding screen space values based on the proportional relationship between the domain and range.</p><h3>constructor({domain?, range?})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>domain?</td><td>[number, number]</td><td>The domain of the mapping. Default is automatically determined.</td></tr><tr><td>range?</td><td>[number, number]</td><td>The range of the mapping. Default is automatically determined.</td></tr></tbody></table><h2>class SquareRootScale</h2><p>Implements a square root mapping from domain to range. The domain represents the interval of the input data values, while the range represents the interval of the output screen space values. Input data values are first square-rooted, then mapped to the corresponding screen space values based on the proportional relationship between the domain and range.</p><h3>constructor({domain?, range?})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>domain?</td><td>[number, number]</td><td>The domain of the mapping. Default is automatically determined.</td></tr><tr><td>range?</td><td>[number, number]</td><td>The range of the mapping. Default is automatically determined.</td></tr></tbody></table><h2>class CategoricalScale</h2><p>Implements a mapping from categorical attributes to numerical values. The domain is a list of categorical attributes, which are mapped to the interval represented by the range, evenly spaced in order.</p><h3>constructor({domain?, range?, interval?})</h3><table><thead><tr><th>parameter</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>domain?</td><td>[number, number]</td><td>The domain of the mapping. Default is automatically determined.</td></tr><tr><td>range?</td><td>[number, number]</td><td>The range of the mapping. Only one of <code>range</code> or <code>interval</code> needs to be specified. If neither is specified, <code>interval</code> is automatically determined.</td></tr><tr><td>interval?</td><td>number</td><td>The spacing between adjacent categories after mapping. Only one of <code>range</code> or <code>interval</code> needs to be specified. If neither is specified, <code>interval</code> is automatically determined.</td></tr></tbody></table>",16)])))}};export{l as default};
