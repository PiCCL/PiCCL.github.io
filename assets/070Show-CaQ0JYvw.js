import{c as o,e as a,o as c}from"./index-COv0kizz.js";const r={class:"markdown-body"},l={__name:"070Show",setup(i,{expose:t}){return t({frontmatter:{}}),(d,e)=>(c(),o("div",r,e[0]||(e[0]=[a("<h1>show</h1><p><code>show</code> is a function used to render graphic objects (<code>GraphicObject</code>) or combinations of graphic objects and data (<code>[GraphicObject, Data]</code>) into a specified container.</p><h2>show(objects, container, config)</h2><p>Renders graphic objects or combinations of graphic objects and data into the specified HTML element container.</p><h3>Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>objects</td><td>(GraphicObject | [GraphicObject, Data])[]</td><td>An array of graphic objects or combinations of graphic objects and data to be rendered.</td></tr><tr><td>container</td><td>HTMLElement</td><td>The target HTML element container for rendering.</td></tr><tr><td>config</td><td>any</td><td>Rendering configuration options.</td></tr></tbody></table><h3>Returns</h3><ul><li>No return value.</li></ul><h3>Parameter Explanation</h3><ol><li><p><code>objects</code> is an array where each element:</p><ul><li>Can be a <code>GraphicObject</code>, indicating that the graphic will be rendered directly.</li><li>Can also be a <code>[GraphicObject, Data]</code> tuple, indicating that the graphic object will be bound to data before rendering.</li></ul></li><li><p><code>container</code></p><ul><li>The target HTML element container where the graphics will be rendered.</li></ul></li><li><p><code>config</code></p><ul><li>Rendering configuration options, supporting custom settings such as <code>background</code>, <code>padding</code>, etc.</li></ul></li></ol>",10)])))}};export{l as default};
